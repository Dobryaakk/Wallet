start_yes = ("<b>–ü—Ä–∏–≤—ñ—Ç üëãüèº</b>\n\n–Ø –±–æ—Ç, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è –æ–±–ª—ñ–∫—É —Ç–≤–æ—ó—Ö —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤ —Ç–∞ —É—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, "
             "—â–æ–± –∑—Ä–æ–±–∏—Ç–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≥—Ä–æ—à–∏–º–∞ –±—ñ–ª—å—à –∑—Ä—É—á–Ω–∏–º. \n\n"
             "<i>–ó–º—ñ–Ω–∏—Ç–∏ –≤–∞–ª—é—Ç—É –º–æ–∂–Ω–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏ <b>/change</b>.</i>")

start_not = ("–ó—Ä–æ–±—ñ—Ç—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å–≤–æ—ó–º–∏ –≥—Ä–æ—à–∏–º–∞ –ª–µ–≥–∫–æ—é —Ç–∞ —Ü—ñ–∫–∞–≤–æ—é —Å–ø—Ä–∞–≤–æ—é –∑–∞–≤–¥—è–∫–∏ –º–µ–Ω—ñ ü§ñ\n\n<i>–ó–º—ñ–Ω–∏—Ç–∏ –≤–∞–ª—é—Ç—É –º–æ–∂–Ω–∞"
             "–∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏ <b>/change</b>.</i>")


# async def parser(amount, from_currency):
#     converted_results = []
#     for target_currency in currency_:
#         link = f'https://finance.rambler.ru/calculators/converter/{amount}-{from_currency}-{target_currency}/'
#         response = requests.get(link, headers=headers).text
#         soup = BeautifulSoup(response, 'lxml')
#         converted_amount = soup.find('div', class_='_2TC8G commercial-branding').findAll('span', class_='_1wjU3')[
#             1].text
#         converted_results.append(f'{target_currency}: {converted_amount}')
#
